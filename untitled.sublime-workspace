{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"New",
				"NewLogger	*BeeLogger ƒ"
			],
			[
				"Mo",
				"ModTime	time.Time ƒ"
			],
			[
				"Re",
				"Rename	error ƒ"
			],
			[
				"Fp",
				"Fprintf	n int, err error ƒ"
			],
			[
				"d",
				"dailyOpendate	int ν"
			],
			[
				"da",
				"Daily	bool ν"
			],
			[
				"ma",
				"MaxSize	int ν"
			],
			[
				"Read",
				"ReadFile	[]byte, error ƒ"
			],
			[
				"op",
				"OpenFile	file *os.File, err error ƒ"
			],
			[
				"w",
				"Write	n int, err error ƒ"
			],
			[
				"s",
				"SetLogger	error ƒ"
			],
			[
				"new",
				"NewLogger	*BeeLogger ƒ"
			],
			[
				"imp",
				"import	import (...) ʂ"
			],
			[
				"json",
				"jsonConfig	string ν"
			],
			[
				"st",
				"Stdout	*os.File ν"
			],
			[
				"log",
				"LoggerInterface	interface ¡"
			],
			[
				"sp",
				"Sprintf	string ƒ"
			],
			[
				"a",
				"adapters	map[string]loggerType ν"
			],
			[
				"adapter",
				"adapterName	string ν"
			],
			[
				"ap",
				"adapterName	string ν"
			],
			[
				"prin",
				"Println	 ƒ"
			],
			[
				"Ya",
				"YAMLConfigContainer	struct ʈ"
			],
			[
				"Y",
				"YAMLConfigContainer	struct ʈ"
			],
			[
				"xml",
				"xmlcontext	 ν"
			],
			[
				"XML",
				"XMLConfig	struct ʈ"
			],
			[
				"v",
				"var	var (...) ʂ"
			],
			[
				"pa",
				"ParseInt	i int64, err error ƒ"
			],
			[
				"D",
				"DocToMap	map[string]interface{}, error ƒ"
			],
			[
				"Fal",
				"Fatal	 ƒ"
			],
			[
				"wri",
				"WriteString	ret int, err error ƒ"
			],
			[
				"fa",
				"Fatal	 ƒ"
			],
			[
				"Json",
				"JsonConfig	struct ʈ"
			],
			[
				"Js",
				"JsonConfigContainer	struct ʈ"
			],
			[
				"JSON",
				"JsonConfigContainer	struct ʈ"
			],
			[
				"pr",
				"Println	n int, err error ƒ"
			],
			[
				"wr",
				"WriteString	ret int, err error ƒ"
			],
			[
				"im",
				"imp	Import"
			],
			[
				"in",
				"IniConfigContainer	struct ʈ"
			],
			[
				"Ini",
				"IniConfigContainer	struct ʈ"
			],
			[
				"se",
				"sectionKey	[]string ν"
			],
			[
				"r",
				"RUnlock	 ƒ"
			],
			[
				"key",
				"keyval	[][]byte ν"
			],
			[
				"bE",
				"bEqual	[]byte ν"
			],
			[
				"trimLe",
				"TrimLeftFunc	[]byte ƒ"
			],
			[
				"b",
				"bComment	[]byte ν"
			],
			[
				"ad",
				"adapterName	string ν"
			],
			[
				"adapt",
				"adapters	map[string]Config ν"
			],
			[
				"ada",
				"adapters	map[string]Config ν"
			],
			[
				"Config",
				"ConfigContainer	interface ¡"
			],
			[
				"p",
				"Println	n int, err error ƒ"
			],
			[
				"main",
				"func main	func main {...} ʂ"
			],
			[
				"Socket",
				"SocketServer	struct ʈ"
			],
			[
				"Sock",
				"SocketServer	struct ʈ"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/base/socket/server.go",
			"settings":
			{
				"buffer_size": 2983,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package main\n\nimport (\n	//\"base/protocol\"\n	\"base/socket\"\n)\n\nvar (\n	socketSrv *socket.SocketServer\n)\n\nfunc main() { \n	config := socket.NewConfig()\n	config.CloseingTimeout = 10000\n	config.HeartbeatTimeout = 1000 * 30\n	config.Addr = \"0.0.0.0:9000\"\n	socketSrv = socket.NewSocketServer(config)\n	socketSrv.Start()\n\n}\n",
			"file": "src/base/TestServer.go",
			"file_size": 311,
			"file_write_time": 130365613530000000,
			"settings":
			{
				"buffer_size": 311,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/GoSublime/GoSublime.sublime-build",
	"command_palette":
	{
		"height": 47.0,
		"selected_items":
		[
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print 'Please restart Sublime Text to finish installation'"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/abram/Library/Application Support/Sublime Text 3/Packages/User/GoSublime.sublime-settings",
		"/Users/abram/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/abram/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/abram/Library/Application Support/Sublime Text 3/Packages/GoSublime/GoSublime.sublime-settings",
		"/Users/abram/Library/Application Support/Sublime Text 3/Packages/GoSublime/USAGE.md",
		"/Users/abram/go/src/git.apache.org/thrift.git/lib/go/thrift/processor_factory.go",
		"/Users/abram/go/src/git.apache.org/thrift.git/lib/go/thrift/protocol.go",
		"/Users/abram/gospace/src/base/socket/TestSocket.go",
		"/Users/abram/gospace/src/base/socket/server.go",
		"/Users/abram/gospace/src/base/config/Config.go",
		"/Users/abram/gospace/src/base/config/Ini.go",
		"/Users/abram/gospace/src/base/config/Json.go",
		"/Users/abram/gospace/src/base/config/Json_test.go",
		"/Users/abram/gospace/src/base/config/Xml.go",
		"/Users/abram/gospace/src/base/config/Yaml.go",
		"/Users/abram/gospace/src/base/config/Yaml_test.go",
		"/Users/abram/gospace/src/base/config/Xml_test.go",
		"/Users/abram/gospace/src/base/config/Ini_test.go",
		"/Users/abram/gospace/src/base/config/testini.conf",
		"/Users/abram/gospace/src/base/TestServer.go",
		"/Users/abram/gospace/src/base/protocol/codec.go",
		"/Users/abram/gospace/src/base/TestServer",
		"/Users/abram/go/src/code.google.com/p/goprotobuf/proto/decode.go",
		"/Users/abram/Downloads/consistent-master/README.md",
		"/Users/abram/Documents/workspace/photoDuck/project.properties",
		"/Users/abram/Library/Application Support/Sublime Text 3/Packages/GoSublime/CHANGELOG.md",
		"/Users/abram/Documents/你总是那么客气,让我有点受宠若惊 - 情书大全.html",
		"/Users/abram/Documents/workspace/webmagic/README.md",
		"/Users/abram/Documents/workspace/helplessly_db_svr/src/db_svr.js"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"_ParseContext",
			"main"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/base/socket/server.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2983,
						"regions":
						{
						},
						"selection":
						[
							[
								2316,
								2316
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/base/TestServer.go",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 311,
						"regions":
						{
						},
						"selection":
						[
							[
								153,
								153
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/syntax/GoSublime-Go.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.9o:///Applications/Sublime Text.app/Contents/MacOS":
	{
		"height": 100.0
	},
	"output.9o:///Users/abram/Documents/gospace/base/src/base":
	{
		"height": 288.0
	},
	"output.9o:///Users/abram/go/src/github.com/stathat/consistent":
	{
		"height": 247.0
	},
	"output.9o:///Users/abram/gospace/base/src/base/socket":
	{
		"height": 228.0
	},
	"output.9o:///Users/abram/gospace/socket/protocol":
	{
		"height": 100.0
	},
	"output.9o:///Users/abram/gospace/src/base":
	{
		"height": 246.0
	},
	"output.9o:///Users/abram/gospace/src/base/config":
	{
		"height": 271.0
	},
	"output.9o:///Users/abram/gospace/src/base/log":
	{
		"height": 142.0
	},
	"output.9o:///Users/abram/gospace/src/base/socket":
	{
		"height": 124.0
	},
	"output.GoSublime-main-output":
	{
		"height": 100.0
	},
	"output.MarGo-output":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"project": "untitled.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 311.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
